<?xml version="1.0" encoding="UTF-8"?><testsuites><testsuite name="test" package="test" id="0" errors="0" failures="2" tests="4" skipped="0" ><testcase classname="tests2" name="it_works" time="0.000000458"/><testcase classname="tests2" name="it_works_2" time="0.000000291"/><testcase classname="tests" name="it_works" time="0.000049"><failure type="assert"/><system-out><![CDATA[how does this look]]>&#xA;<![CDATA[thread 'tests::it_works' panicked at 'assertion failed: `(left == right)`]]>&#xA;<![CDATA[  left: `4`,]]>&#xA;<![CDATA[ right: `5`', src/lib.rs:21:9]]>&#xA;<![CDATA[note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace]]>&#xA;<![CDATA[]]></system-out></testcase><testcase classname="tests" name="it_works_2" time="0.007052584"><failure type="assert"/><system-out><![CDATA[Running command: "/bin/bash" "-c" "spin --version"]]>&#xA;<![CDATA[thread 'tests::it_works_2' panicked at 'assertion failed: `(left == right)`]]>&#xA;<![CDATA[  left: `true`,]]>&#xA;<![CDATA[ right: `false`', src/lib.rs:27:9]]>&#xA;<![CDATA[]]></system-out></testcase><system-out/><system-err/></testsuite></testsuites>
<?xml version="1.0" encoding="UTF-8"?><testsuites><testsuite name="test" package="test" id="0" errors="0" failures="0" tests="0" skipped="0" ><system-out/><system-err/></testsuite></testsuites>